/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var cityInput = document.querySelector("#input-city");
var searchBtn = document.querySelector(".search");

function getWeatherData(_x) {
  return _getWeatherData.apply(this, arguments);
}

function _getWeatherData() {
  _getWeatherData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(location) {
    var response, weatherData, newData;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return fetch("http://api.weatherapi.com/v1/forecast.json?key=1986480656ec490d950204923202611&q=".concat(location, "&lang=de"), {
              mode: 'cors'
            });

          case 2:
            response = _context.sent;

            if (!response.ok) {
              throwErrorMsg();
            }

            _context.next = 6;
            return response.json();

          case 6:
            weatherData = _context.sent;
            newData = processData(weatherData);
            setSearchResult(newData);

          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getWeatherData.apply(this, arguments);
}

function throwErrorMsg() {
  console.log("error");
}

function setSearchResult(weatherData) {
  if (!weatherData) return;
  var weather = document.querySelector(".weather");
  var city = document.querySelector(".city");
  var celsius = document.querySelector(".celsius");
  var feelsLike = document.querySelector(".feelsLike");
  var wind = document.querySelector(".wind");
  var humidity = document.querySelector(".humidity");
  city.textContent = "".concat(weatherData.location, ", ").concat(weatherData.region);
  weather.textContent = "".concat(weatherData.condition);
  celsius.textContent = "".concat(weatherData.currentTemp, "\xB0C");
  feelsLike.textContent = "Gef\xFChlt: ".concat(weatherData.feelslike, " \xB0C");
  wind.textContent = "Wind: ".concat(weatherData.wind, " km/h");
  humidity.textContent = "Luftfeuchtigkeit: ".concat(weatherData.humidity, "%");
}

function processData(weatherData) {
  var data = {
    condition: weatherData.current.condition.text,
    feelslike: Math.round(weatherData.current.feelslike_c),
    currentTemp: Math.round(weatherData.current.temp_c),
    wind: weatherData.current.wind_kph,
    humidity: weatherData.current.humidity,
    location: weatherData.location.name,
    region: weatherData.location.region
  };
  return data;
}

searchBtn.addEventListener("click", function (e) {
  e.preventDefault();
  if (cityInput.value == "") return;
  getWeatherData(cityInput.value);
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWI7RUFTQSxPQUFPSSxJQUFQO0FBQ0g7O0FBRUQxQixTQUFTLENBQUNtQyxnQkFBVixDQUEyQixPQUEzQixFQUFvQyxVQUFDQyxDQUFELEVBQU87RUFDdkNBLENBQUMsQ0FBQ0MsY0FBRjtFQUNBLElBQUl4QyxTQUFTLENBQUN5QyxLQUFWLElBQW1CLEVBQXZCLEVBQTJCO0VBQzNCckMsY0FBYyxDQUFDSixTQUFTLENBQUN5QyxLQUFYLENBQWQ7QUFDSCxDQUpELEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjaXR5SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2lucHV0LWNpdHlcIik7XG5jb25zdCBzZWFyY2hCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNlYXJjaFwiKVxuXG5cbmFzeW5jIGZ1bmN0aW9uIGdldFdlYXRoZXJEYXRhKGxvY2F0aW9uKSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgYGh0dHA6Ly9hcGkud2VhdGhlcmFwaS5jb20vdjEvZm9yZWNhc3QuanNvbj9rZXk9MTk4NjQ4MDY1NmVjNDkwZDk1MDIwNDkyMzIwMjYxMSZxPSR7bG9jYXRpb259Jmxhbmc9ZGVgLFxuICAgICAgICB7XG4gICAgICAgICAgICBtb2RlOiAnY29ycydcbiAgICAgICAgfVxuICAgICk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvd0Vycm9yTXNnKCk7XG4gICAgfVxuICAgIGNvbnN0IHdlYXRoZXJEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGNvbnN0IG5ld0RhdGEgPSBwcm9jZXNzRGF0YSh3ZWF0aGVyRGF0YSk7XG4gICAgc2V0U2VhcmNoUmVzdWx0KG5ld0RhdGEpO1xufVxuXG5mdW5jdGlvbiB0aHJvd0Vycm9yTXNnKCkge1xuICAgIGNvbnNvbGUubG9nKFwiZXJyb3JcIilcbn1cblxuZnVuY3Rpb24gc2V0U2VhcmNoUmVzdWx0KHdlYXRoZXJEYXRhKSB7XG4gICAgaWYgKCF3ZWF0aGVyRGF0YSkgcmV0dXJuO1xuXG4gICAgY29uc3Qgd2VhdGhlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIud2VhdGhlclwiKTtcbiAgICBjb25zdCBjaXR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jaXR5XCIpXG4gICAgY29uc3QgY2Vsc2l1cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2Vsc2l1c1wiKVxuICAgIGNvbnN0IGZlZWxzTGlrZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZmVlbHNMaWtlXCIpO1xuICAgIGNvbnN0IHdpbmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLndpbmRcIik7XG4gICAgY29uc3QgaHVtaWRpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmh1bWlkaXR5XCIpO1xuXG4gICAgY2l0eS50ZXh0Q29udGVudCA9IGAke3dlYXRoZXJEYXRhLmxvY2F0aW9ufSwgJHt3ZWF0aGVyRGF0YS5yZWdpb259YFxuICAgIHdlYXRoZXIudGV4dENvbnRlbnQgPSBgJHt3ZWF0aGVyRGF0YS5jb25kaXRpb259YFxuICAgIGNlbHNpdXMudGV4dENvbnRlbnQgPSBgJHt3ZWF0aGVyRGF0YS5jdXJyZW50VGVtcH3CsENgXG4gICAgZmVlbHNMaWtlLnRleHRDb250ZW50ID0gYEdlZsO8aGx0OiAke3dlYXRoZXJEYXRhLmZlZWxzbGlrZX0gwrBDYFxuICAgIHdpbmQudGV4dENvbnRlbnQgPSBgV2luZDogJHt3ZWF0aGVyRGF0YS53aW5kfSBrbS9oYFxuICAgIGh1bWlkaXR5LnRleHRDb250ZW50ID0gYEx1ZnRmZXVjaHRpZ2tlaXQ6ICR7d2VhdGhlckRhdGEuaHVtaWRpdHl9JWBcbn1cblxuZnVuY3Rpb24gcHJvY2Vzc0RhdGEod2VhdGhlckRhdGEpIHtcbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgICBjb25kaXRpb246IHdlYXRoZXJEYXRhLmN1cnJlbnQuY29uZGl0aW9uLnRleHQsXG4gICAgICAgIGZlZWxzbGlrZTogTWF0aC5yb3VuZCh3ZWF0aGVyRGF0YS5jdXJyZW50LmZlZWxzbGlrZV9jKSxcbiAgICAgICAgY3VycmVudFRlbXA6IE1hdGgucm91bmQod2VhdGhlckRhdGEuY3VycmVudC50ZW1wX2MpLFxuICAgICAgICB3aW5kOiB3ZWF0aGVyRGF0YS5jdXJyZW50LndpbmRfa3BoLFxuICAgICAgICBodW1pZGl0eTogd2VhdGhlckRhdGEuY3VycmVudC5odW1pZGl0eSxcbiAgICAgICAgbG9jYXRpb246IHdlYXRoZXJEYXRhLmxvY2F0aW9uLm5hbWUsXG4gICAgICAgIHJlZ2lvbjogd2VhdGhlckRhdGEubG9jYXRpb24ucmVnaW9uLFxuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbn1cblxuc2VhcmNoQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAoY2l0eUlucHV0LnZhbHVlID09IFwiXCIpIHJldHVybjtcbiAgICBnZXRXZWF0aGVyRGF0YShjaXR5SW5wdXQudmFsdWUpO1xufSkiXSwibmFtZXMiOlsiY2l0eUlucHV0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic2VhcmNoQnRuIiwiZ2V0V2VhdGhlckRhdGEiLCJsb2NhdGlvbiIsImZldGNoIiwibW9kZSIsInJlc3BvbnNlIiwib2siLCJ0aHJvd0Vycm9yTXNnIiwianNvbiIsIndlYXRoZXJEYXRhIiwibmV3RGF0YSIsInByb2Nlc3NEYXRhIiwic2V0U2VhcmNoUmVzdWx0IiwiY29uc29sZSIsImxvZyIsIndlYXRoZXIiLCJjaXR5IiwiY2Vsc2l1cyIsImZlZWxzTGlrZSIsIndpbmQiLCJodW1pZGl0eSIsInRleHRDb250ZW50IiwicmVnaW9uIiwiY29uZGl0aW9uIiwiY3VycmVudFRlbXAiLCJmZWVsc2xpa2UiLCJkYXRhIiwiY3VycmVudCIsInRleHQiLCJNYXRoIiwicm91bmQiLCJmZWVsc2xpa2VfYyIsInRlbXBfYyIsIndpbmRfa3BoIiwibmFtZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=